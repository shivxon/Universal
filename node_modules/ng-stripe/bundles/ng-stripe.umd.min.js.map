{"version":3,"sources":["ng://ng-stripe/lib/ng-stripe.component.ts","ng://ng-stripe/lib/ng-stripe.module.ts"],"names":["NgStripeComponent","httpClient","formBuilder","this","stripeBtnText","stripeBtnLoading","BtnText","stripe","stripMessage","stripBtnDisabled","submitted","stripData","apiResponse","EventEmitter","stripeCardForm","group","name","Validators","cardNumber","CreditCardValidator","expirationDate","cvc","minLength","maxLength","Object","defineProperty","prototype","currency","orderId","email","apiKey","apiSecret","totalAmount","ngOnInit","controls","payUsingStripe","_this","total","parseFloat","Math","round","toFixed","console","log","amount","toString","invalid","tokenbody","HttpParams","set","value","getMonth","getYear","httpOptions","headers","HttpHeaders","Authorization","Content-Type","post","subscribe","data","description","body","id","datas","emit","token","errs","breaks","err","substring","y","split","length","trim","Component","args","selector","template","HttpClient","FormBuilder","Output","Input","NgStripeModule","NgModule","declarations","imports","FormsModule","HttpClientModule","ReactiveFormsModule","BrowserModule","CreditCardDirectivesModule","providers","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'; \nimport { CreditCardValidator } from 'angular-cc-library';\n\n@Component({\n  selector: 'lib-ng-stripe',\n  templateUrl: './ng-stripe.component.html',\n  styleUrls: ['./ng-stripe.component.css']\n})\nexport class NgStripeComponent implements OnInit {\n\n  public apiKey: string;\n  public apiSecret: string;\n  public totalAmount: number;\n  public stripeBtnText = 'Pay Now';\n  public stripeBtnLoading = 'Please Wait..';\n  public BtnText = 'Pay Now';\n  public orderId: any;\n  public email: any;\n  public currency: string;\n\n  /* Stripe */\n  public stripeCardForm: FormGroup;\n  stripe: any = {\n    stripeBtnText: 'Pay Now',\n    stripMessage: '',\n    stripBtnDisabled: false,\n    submitted: false,\n    stripData: {}\n  };\n  constructor(private httpClient: HttpClient, private formBuilder: FormBuilder) {\n    this.stripeCardForm = this.formBuilder.group({\n      name: ['', [<any> Validators.required]],\n      cardNumber: ['', [<any> CreditCardValidator.validateCCNumber]],\n      expirationDate: ['', [<any> CreditCardValidator.validateExpDate]],\n      cvc: ['', [<any> Validators.required, <any> Validators.minLength(3), <any> Validators.maxLength(4)]]\n    });\n  }\n\t\n  @Output()\n  apiResponse: EventEmitter<Object> = new EventEmitter<Object>();\n\n  @Input('stripeBtnText')\n  public set setstripeBtnText(stripeBtnText: string) {\n    this.stripeBtnText = stripeBtnText;\n    this.BtnText = this.stripeBtnText;\n  }\n\t@Input('currency')\n  public set setcurrency(currency: string) {\n    this.currency = currency; \n  }\n  @Input('orderId')\n  public set setorderId(orderId: string) {\n    this.orderId = orderId;\n  }\n  @Input('email')\n  public set setemail(email: string) {\n    this.email = email;\n  }\n  @Input('stripeBtnLoading')\n  public set setstripeBtnLoading(stripeBtnLoading: string) {\n    this.stripeBtnLoading = stripeBtnLoading;\n  }\n\n  @Input('apiKey')\n  public set setapiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  @Input('apiSecret')\n  public set setapiSecret(apiSecret: string) {\n    this.apiSecret = apiSecret;\n  }\n  @Input('totalAmount')\n  public set settotalAmount(totalAmount: number) {\n    this.totalAmount = totalAmount;\n  }\n\n  ngOnInit() {\n  }\n\n  /* Stripe Payment */\n  get f() { return this.stripeCardForm.controls; }\n\n  payUsingStripe() {\n    const total = parseFloat((Math.round(this.totalAmount * 100) / 100).toFixed(2));\n    console.log('Total Order Amounth is ' + total);\n    const amount = Math.round(total * 100).toString();\n    this.stripe.submitted = true;\n\n    // stop here if form is invalid\n    if (this.stripeCardForm.invalid) {\n      return;\n    }\n\n    this.BtnText = this.stripeBtnLoading;\n    this.stripe.stripBtnDisabled = true;\n\n    /* Generating card token */\n    const tokenbody = new HttpParams()\n      .set('card[number]', this.stripeCardForm.value.cardNumber)\n      .set('card[cvc]', this.stripeCardForm.value.cvc)\n      .set('card[exp_month]', this.getMonth(this.stripeCardForm.value.expirationDate))\n      .set('card[exp_year]', this.getYear(this.stripeCardForm.value.expirationDate))\n      .set('card[name]', this.stripeCardForm.value.name)\n      .set('key', this.apiKey);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + this.apiSecret,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    this\n      .httpClient\n      .post(`https://api.stripe.com/v1/tokens`, tokenbody, httpOptions)\n      .subscribe(\n        (data: any) => {\n          if (data) {\n\n            const description = 'Order id ' + this.orderId + ' and user ' + this.email + '';\n\n            const body = new HttpParams()\n              .set('amount', amount)\n              .set('currency', this.currency)\n              .set('source', data.id)\n              .set('description', description); \n\n            this\n              .httpClient\n              .post(`https://api.stripe.com/v1/charges`, body, httpOptions)\n              .subscribe(\n                (datas: any) => {\n                  this.apiResponse.emit({data: datas, token: data});\n                  this.stripe.stripBtnDisabled = true;\n                  this.stripe.stripMessage = '';\n                  this.BtnText = this.stripeBtnText;\n                },\n                (errs: any) => {\n                  this.apiResponse.emit({breaks: 'charges', err: errs});\n                  this.stripe.stripBtnDisabled = false;\n                  this.BtnText = this.stripeBtnText;\n                }\n              );\n          }\n        },\n        (err: any) => {\n          this.apiResponse.emit({breaks: 'tokens', err: err});\n          this.stripe.stripBtnDisabled = false;\n          this.BtnText = this.stripeBtnText;\n        }\n      );\n  }\n\n  getMonth(data: any) {\n    return data.substring(0, 2);\n  }\n  getYear(data: any) {\n    const y = data.split('/');\n    if (y.length > 1) {\n      return y[1].trim();\n    }\n  } \n}\n","import { NgModule } from '@angular/core';\nimport { NgStripeComponent } from './ng-stripe.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser'; \nimport { CreditCardDirectivesModule } from 'angular-cc-library';\n\n@NgModule({\n  declarations: [\n    NgStripeComponent\n  ],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserModule,\n\t\tCreditCardDirectivesModule\n  ],\n  providers: [],\n  exports: [NgStripeComponent]\n})\nexport class NgStripeModule { }"]}