{"version":3,"file":"ng-stripe.umd.js","sources":["ng://ng-stripe/lib/ng-stripe.component.ts","ng://ng-stripe/lib/ng-stripe.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'; \nimport { CreditCardValidator } from 'angular-cc-library';\n\n@Component({\n  selector: 'lib-ng-stripe',\n  templateUrl: './ng-stripe.component.html',\n  styleUrls: ['./ng-stripe.component.css']\n})\nexport class NgStripeComponent implements OnInit {\n\n  public apiKey: string;\n  public apiSecret: string;\n  public totalAmount: number;\n  public stripeBtnText = 'Pay Now';\n  public stripeBtnLoading = 'Please Wait..';\n  public BtnText = 'Pay Now';\n  public orderId: any;\n  public email: any;\n  public currency: string;\n\n  /* Stripe */\n  public stripeCardForm: FormGroup;\n  stripe: any = {\n    stripeBtnText: 'Pay Now',\n    stripMessage: '',\n    stripBtnDisabled: false,\n    submitted: false,\n    stripData: {}\n  };\n  constructor(private httpClient: HttpClient, private formBuilder: FormBuilder) {\n    this.stripeCardForm = this.formBuilder.group({\n      name: ['', [<any> Validators.required]],\n      cardNumber: ['', [<any> CreditCardValidator.validateCCNumber]],\n      expirationDate: ['', [<any> CreditCardValidator.validateExpDate]],\n      cvc: ['', [<any> Validators.required, <any> Validators.minLength(3), <any> Validators.maxLength(4)]]\n    });\n  }\n\t\n  @Output()\n  apiResponse: EventEmitter<Object> = new EventEmitter<Object>();\n\n  @Input('stripeBtnText')\n  public set setstripeBtnText(stripeBtnText: string) {\n    this.stripeBtnText = stripeBtnText;\n    this.BtnText = this.stripeBtnText;\n  }\n\t@Input('currency')\n  public set setcurrency(currency: string) {\n    this.currency = currency; \n  }\n  @Input('orderId')\n  public set setorderId(orderId: string) {\n    this.orderId = orderId;\n  }\n  @Input('email')\n  public set setemail(email: string) {\n    this.email = email;\n  }\n  @Input('stripeBtnLoading')\n  public set setstripeBtnLoading(stripeBtnLoading: string) {\n    this.stripeBtnLoading = stripeBtnLoading;\n  }\n\n  @Input('apiKey')\n  public set setapiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  @Input('apiSecret')\n  public set setapiSecret(apiSecret: string) {\n    this.apiSecret = apiSecret;\n  }\n  @Input('totalAmount')\n  public set settotalAmount(totalAmount: number) {\n    this.totalAmount = totalAmount;\n  }\n\n  ngOnInit() {\n  }\n\n  /* Stripe Payment */\n  get f() { return this.stripeCardForm.controls; }\n\n  payUsingStripe() {\n    const total = parseFloat((Math.round(this.totalAmount * 100) / 100).toFixed(2));\n    console.log('Total Order Amounth is ' + total);\n    const amount = Math.round(total * 100).toString();\n    this.stripe.submitted = true;\n\n    // stop here if form is invalid\n    if (this.stripeCardForm.invalid) {\n      return;\n    }\n\n    this.BtnText = this.stripeBtnLoading;\n    this.stripe.stripBtnDisabled = true;\n\n    /* Generating card token */\n    const tokenbody = new HttpParams()\n      .set('card[number]', this.stripeCardForm.value.cardNumber)\n      .set('card[cvc]', this.stripeCardForm.value.cvc)\n      .set('card[exp_month]', this.getMonth(this.stripeCardForm.value.expirationDate))\n      .set('card[exp_year]', this.getYear(this.stripeCardForm.value.expirationDate))\n      .set('card[name]', this.stripeCardForm.value.name)\n      .set('key', this.apiKey);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + this.apiSecret,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    this\n      .httpClient\n      .post(`https://api.stripe.com/v1/tokens`, tokenbody, httpOptions)\n      .subscribe(\n        (data: any) => {\n          if (data) {\n\n            const description = 'Order id ' + this.orderId + ' and user ' + this.email + '';\n\n            const body = new HttpParams()\n              .set('amount', amount)\n              .set('currency', this.currency)\n              .set('source', data.id)\n              .set('description', description); \n\n            this\n              .httpClient\n              .post(`https://api.stripe.com/v1/charges`, body, httpOptions)\n              .subscribe(\n                (datas: any) => {\n                  this.apiResponse.emit({data: datas, token: data});\n                  this.stripe.stripBtnDisabled = true;\n                  this.stripe.stripMessage = '';\n                  this.BtnText = this.stripeBtnText;\n                },\n                (errs: any) => {\n                  this.apiResponse.emit({breaks: 'charges', err: errs});\n                  this.stripe.stripBtnDisabled = false;\n                  this.BtnText = this.stripeBtnText;\n                }\n              );\n          }\n        },\n        (err: any) => {\n          this.apiResponse.emit({breaks: 'tokens', err: err});\n          this.stripe.stripBtnDisabled = false;\n          this.BtnText = this.stripeBtnText;\n        }\n      );\n  }\n\n  getMonth(data: any) {\n    return data.substring(0, 2);\n  }\n  getYear(data: any) {\n    const y = data.split('/');\n    if (y.length > 1) {\n      return y[1].trim();\n    }\n  } \n}\n","import { NgModule } from '@angular/core';\nimport { NgStripeComponent } from './ng-stripe.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser'; \nimport { CreditCardDirectivesModule } from 'angular-cc-library';\n\n@NgModule({\n  declarations: [\n    NgStripeComponent\n  ],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserModule,\n\t\tCreditCardDirectivesModule\n  ],\n  providers: [],\n  exports: [NgStripeComponent]\n})\nexport class NgStripeModule { }"],"names":["EventEmitter","Validators","CreditCardValidator","HttpParams","HttpHeaders","Component","HttpClient","FormBuilder","Output","Input","NgModule","FormsModule","HttpClientModule","ReactiveFormsModule","BrowserModule","CreditCardDirectivesModule"],"mappings":"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"}