!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("@angular/forms"),require("angular-cc-library"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ng-stripe",["exports","@angular/core","@angular/common/http","@angular/forms","angular-cc-library","@angular/platform-browser"],t):t((e=e||self)["ng-stripe"]={},e.ng.core,e.ng.common.http,e.ng.forms,e.angularCcLibrary,e.ng.platformBrowser)}(this,function(e,t,r,i,n,s){"use strict";var a=function(){function e(e,r){this.httpClient=e,this.formBuilder=r,this.stripeBtnText="Pay Now",this.stripeBtnLoading="Please Wait..",this.BtnText="Pay Now",this.stripe={stripeBtnText:"Pay Now",stripMessage:"",stripBtnDisabled:!1,submitted:!1,stripData:{}},this.apiResponse=new t.EventEmitter,this.stripeCardForm=this.formBuilder.group({name:["",[i.Validators.required]],cardNumber:["",[n.CreditCardValidator.validateCCNumber]],expirationDate:["",[n.CreditCardValidator.validateExpDate]],cvc:["",[i.Validators.required,i.Validators.minLength(3),i.Validators.maxLength(4)]]})}return Object.defineProperty(e.prototype,"setstripeBtnText",{set:function(e){this.stripeBtnText=e,this.BtnText=this.stripeBtnText},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setcurrency",{set:function(e){this.currency=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setorderId",{set:function(e){this.orderId=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setemail",{set:function(e){this.email=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setstripeBtnLoading",{set:function(e){this.stripeBtnLoading=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setapiKey",{set:function(e){this.apiKey=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setapiSecret",{set:function(e){this.apiSecret=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"settotalAmount",{set:function(e){this.totalAmount=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},Object.defineProperty(e.prototype,"f",{get:function(){return this.stripeCardForm.controls},enumerable:!0,configurable:!0}),e.prototype.payUsingStripe=function(){var e=this,t=parseFloat((Math.round(100*this.totalAmount)/100).toFixed(2));console.log("Total Order Amounth is "+t);var i=Math.round(100*t).toString();if(this.stripe.submitted=!0,!this.stripeCardForm.invalid){this.BtnText=this.stripeBtnLoading,this.stripe.stripBtnDisabled=!0;var n=(new r.HttpParams).set("card[number]",this.stripeCardForm.value.cardNumber).set("card[cvc]",this.stripeCardForm.value.cvc).set("card[exp_month]",this.getMonth(this.stripeCardForm.value.expirationDate)).set("card[exp_year]",this.getYear(this.stripeCardForm.value.expirationDate)).set("card[name]",this.stripeCardForm.value.name).set("key",this.apiKey),s={headers:new r.HttpHeaders({Authorization:"Bearer "+this.apiSecret,"Content-Type":"application/x-www-form-urlencoded"})};this.httpClient.post("https://api.stripe.com/v1/tokens",n,s).subscribe(function(t){if(t){var n="Order id "+e.orderId+" and user "+e.email,a=(new r.HttpParams).set("amount",i).set("currency",e.currency).set("source",t.id).set("description",n);e.httpClient.post("https://api.stripe.com/v1/charges",a,s).subscribe(function(r){e.apiResponse.emit({data:r,token:t}),e.stripe.stripBtnDisabled=!0,e.stripe.stripMessage="",e.BtnText=e.stripeBtnText},function(t){e.apiResponse.emit({breaks:"charges",err:t}),e.stripe.stripBtnDisabled=!1,e.BtnText=e.stripeBtnText})}},function(t){e.apiResponse.emit({breaks:"tokens",err:t}),e.stripe.stripBtnDisabled=!1,e.BtnText=e.stripeBtnText})}},e.prototype.getMonth=function(e){return e.substring(0,2)},e.prototype.getYear=function(e){var t=e.split("/");if(t.length>1)return t[1].trim()},e.decorators=[{type:t.Component,args:[{selector:"lib-ng-stripe",template:'<form [formGroup]="stripeCardForm" novalidate (ngSubmit)="payUsingStripe()" class="text-center">\n    <div class="cardHolderW">\n        <div class="cardHolder text-left">\n            <div class="cardHolder-front">\n                <div class="cardHolder-front-inner">\n                    <div class="form-group">\n                        <input type="text" formControlName="cardNumber" class="form-control" [ngClass]="{ \'is-invalid\': stripe.submitted && f.cardNumber.errors }" placeholder="Card Number" ccFormat />\n                        <div *ngIf="f.cardNumber.errors" class="invalid-feedback">\n                            <div *ngIf="f.cardNumber.errors.ccNumber">Invalid Card Number</div>\n                        </div>\n                    </div>\n\n                    <div class="form-group">\n                        <input type="tel" formControlName="expirationDate" class="form-control" [ngClass]="{ \'is-invalid\': stripe.submitted && f.expirationDate.errors }" placeholder="Expiration Date" ccExp />\n                        <div *ngIf="f.expirationDate.errors" class="invalid-feedback">\n                            <div *ngIf="f.expirationDate.errors.expDate">Expiration Date is invalid</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="form-group mt-15 mb-0">\n                    <input type="text" formControlName="name" class="form-control" [ngClass]="{ \'is-invalid\': stripe.submitted && f.name.errors }" placeholder="Card Holder Name" />\n                    <div *ngIf="f.name.errors" class="invalid-feedback">\n                        <div *ngIf="f.name.errors.required">Name is required</div>\n                    </div>\n                </div>\n\n            </div>\n            <div class="cardHolder-back">\n                <div class="cardHolder-back-inner">\n                    <div class="form-group">\n                        <input type="text" formControlName="cvc" class="form-control" [ngClass]="{ \'is-invalid\': stripe.submitted && f.cvc.errors }" ccCvc mask="0*" placeholder="CVC" mask="0000" />\n                        <div *ngIf="f.cvc.errors" class="invalid-feedback">\n                            <div *ngIf="f.cvc.errors.required">CVC is required</div>\n                            <div *ngIf="f.cvc.errors.maxlength || f.cvc.errors.minlength">Invalid CVC</div>\n                        </div>\n                    </div>\n                    <p>Code on the back of your card</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="alert alert-danger" *ngIf="stripe.stripMessage != \'\'">\n            {{stripe.stripMessage}}\n        </div>\n\n        <button type="submit" [disabled]="stripe.stripBtnDisabled" class="btn btn-primary pt-2 pb-2 pr-4 pl-4 text-uppercase w-100 mb-15">{{BtnText}}</button>\n\n    </div>\n</form>',styles:[""]}]}],e.ctorParameters=function(){return[{type:r.HttpClient},{type:i.FormBuilder}]},e.propDecorators={apiResponse:[{type:t.Output}],setstripeBtnText:[{type:t.Input,args:["stripeBtnText"]}],setcurrency:[{type:t.Input,args:["currency"]}],setorderId:[{type:t.Input,args:["orderId"]}],setemail:[{type:t.Input,args:["email"]}],setstripeBtnLoading:[{type:t.Input,args:["stripeBtnLoading"]}],setapiKey:[{type:t.Input,args:["apiKey"]}],setapiSecret:[{type:t.Input,args:["apiSecret"]}],settotalAmount:[{type:t.Input,args:["totalAmount"]}]},e}();var o=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[a],imports:[i.FormsModule,r.HttpClientModule,i.ReactiveFormsModule,s.BrowserModule,n.CreditCardDirectivesModule],providers:[],exports:[a]}]}],e}();e.NgStripeComponent=a,e.NgStripeModule=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-stripe.umd.min.js.map